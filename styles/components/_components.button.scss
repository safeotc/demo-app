.c-button {
  //@include short-shadow();
  @include border-radius();
  @include focus-outline();
  @include short-transition(
    color border-color background-color outline opacity
  );
  color: var(--button-neutral);
  background: transparent;
  padding: $button-tb-padding $button-lr-padding;
  text-transform: uppercase;
  font-weight: bold;
  border: 2px solid var(--button-neutral);
  cursor: pointer;
  position: relative;
  display: block;
  width: 100%;

  @include mq($from: m) {
    width: auto;
    display: inline-block;
  }

  & + & {
    margin-top: 0.5em;

    @include mq($from: m) {
      margin-top: 0;
      margin-left: 0.5em;
    }
  }

  &:not([disabled]):hover {
    color: var(--button-neutral-hover);
    border-color: var(--button-neutral-hover);
  }

  &:active {
    top: 1px;
  }

  &[disabled] {
    opacity: 0.5;
    cursor: not-allowed;

    &:active {
      top: 0;
    }
  }
}

.c-button--small {
  font-size: 0.75em;
}

.c-button--large {
  font-size: 1.25em;
}

.c-button--danger {
  color: var(--button-danger);
  border: 2px solid var(--button-danger);

  &:not([disabled]):hover {
    color: $color-primary-light;
    border-color: var(--button-danger-hover);
    background-color: var(--button-danger-hover);
  }
}

.c-button--primary {
  border: none;
  padding-top: calc(#{$button-tb-padding} + 2px);
  padding-bottom: calc(#{$button-tb-padding} + 2px);
  background: var(--button-colored);
  color: $color-primary-light;

  &:not([disabled]):hover {
    color: $color-primary-light;
    background: var(--button-colored-hover);
  }
}

.c-button--secondary {
  z-index: 0;

  & .c-button__content {
    background: var(--button-colored);
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  &:before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    margin: -2px;
    border-radius: inherit;
    background: var(--button-colored);
  }

  &:after {
    @include short-transition(background-color);
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: -2px;
    border-radius: inherit;
    background: var(--color-primary);
    background-clip: padding-box;
    border: 2px solid transparent;
    z-index: -1;
  }

  &:not([disabled]):hover {
    &:before {
      background: var(--button-colored-hover);
    }

    & .c-button__content {
      background-image: var(--button-colored-hover);
    }
  }

  &.c-button--alt-background {
    &:after {
      background-color: var(--color-secondary);
    }
  }
}

.c-button--inline {
  display: inline-block;
  width: auto;

  .c-button + & {
    margin-top: 0;
  }

  & + & {
    margin-left: 0.5em;
  }
}

@include screen-rule("c-button--icon-only", "-") {
  padding-left: $button-icon-only-lr-padding;
  padding-right: $button-icon-only-lr-padding;
  //border-radius: 50%;

  & .c-button__text {
    @include hidden-visually();
  }
}

.c-button__content {
  font-size: 0.8em;
  display: inline-flex;
  align-items: center;
  @include short-transition(opacity);
}

.c-button__content--loading {
  opacity: 0;
}

.c-button__loading {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);

  i {
    display: block;
    animation: loading-icon-spin 1000ms linear infinite;

    @keyframes loading-icon-spin {
      from {
        transform: rotate(0deg);
      }

      to {
        transform: rotate(360deg);
      }
    }

    &:before {
      display: block;
    }
  }
}

.c-button__text {
  .c-button__icon + & {
    margin-left: 0.5rem;
  }
}

.c-button__wallet-icon {
  vertical-align: text-bottom;
  fill: var(--button-neutral);
  stroke: var(--button-neutral);
  @include short-transition(fill stroke);

  .c-button--primary & {
    fill: $color-primary-light;
    stroke: $color-primary-light;
  }
}
